- hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    mas_enabled: false
    homebrew_taps:
      - caskroom/cask
      - sanemat/font
  tasks:
    - name: add third party repositories
      homebrew_tap: tap="{{ item }}" state=present
      with_items: "{{ homebrew_taps }}"
    - name: update homebrew
      homebrew: update_homebrew=yes
    - name: install homebrew packages
      homebrew: name="{{ item }}" state=present
      with_items:
        - readline
        - sqlite
        - gdbm
        - openssl
        - python
        - libyaml
        # openssl@1.1 will be installed for ansible. However, from ansible it is regarded as an invalid package name.
        - ansible
        - cask
        - mas
        - bash-completion
        - git
        - tig
        - wget
        - tree
        - nkf
        - oniguruma
        - jq
        - pstree
        - colordiff
        - boost
        - source-highlight
        - libevent
        - tmux
        - reattach-to-user-namespace
        - htop
        - autoconf
        - pkg-config
        - ruby-build
        - rbenv
        - nodebrew
        - awscli
        - terraform
        - mysql
      register: brew_result
    - name: create directory of package information
      file: path=brew_info state=directory
    - name: store the homebrew package information
      shell: "brew info {{ item }} > brew_info/{{ item }}"
      with_items: "{{ brew_result.results | selectattr('changed') | map(attribute='item') | list }}"
    - name: install homebrew cask packages
      homebrew_cask: name="{{ item }}" state=present
      with_items:
        - appcleaner
        - google-japanese-ime
        - cmd-eikana
        - clipy
        - alfred
        - bartender
        - shiftit
        - flux
        - google-chrome
        - dropbox
        - skype
        - github-desktop
        - sourcetree
        - macdown
        - iterm2
        - atom
        - visual-studio-code
        - intellij-idea
        - dash
        - virtualbox
        - vagrant
        - vagrant-manager
        - docker
        - tunnelblick
        - gyazo
        - licecap
        - istumbler
        - toggldesktop
      register: cask_result
    - name: create directory of package information for homebrew cask
      file: path=cask_info state=directory
    - name: store the homebrew cask package information
      shell: "brew cask info {{ item }} > cask_info/{{ item }}"
      with_items: "{{ cask_result.results | selectattr('changed') | map(attribute='item') | list }}"
    - name: name install App Store provides apps
      shell: mas install "{{ item.id }}"
      with_items:
        - name: 1Password
          id: 443987910
        - name: Slack
          id: 803453959
        - name: Keynote
          id: 409183694
        - name: Numbers
          id: 409203825
        - name: Pages
          id: 409201541
        - name: The Unarchiver
          id: 425424353
        - name: WinArchiver Lite
          id: 414855915
        - name: Evernote
          id: 406056744
        - name: Skitch
          id: 425955336
        - name: Day One
          id: 1055511498
        - name: Quiver
          id: 866773894
        - name: Kobito
          id: 896624060
        - name: Wunderlist
          id: 410628904
        - name: Todoist
          id: 585829637
        - name: Time Sink
          id: 404363161
        - name: Microsoft Remote Desktop
          id: 715768417
        - name: Pocket
          id: 568494494
        - name: YoruFukurou
          id: 428834068
        - name: LINE
          id: 539883307
        - name: Kinoppy
          id: 572547904
        - name: Spark
          id: 1176895641
      when: "{{ mas_enabled }}"
    # install ricty font
    - stat: path=~/Library/Fonts/Ricty-Regular.ttf
      register: is_ricty_installed
    - block:
      - name: install xquartz for Ricty font
        homebrew_cask: name=xquartz state=present
      - name: install dependencies for Ricty font
        homebrew: name=fontforge state=present
      - name: install Ricty font
        homebrew: name=ricty state=present
      - name: copy the generated font files
        shell: cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/
        args:
          creates: ~/Library/Fonts/Ricty-Bold.ttf
      - name: run fc-cache
        shell: fc-cache -vf
      - name: uninstall xquartz for Ricty font
        homebrew_cask: name=xquartz state=absent
      - name: uninstall dependencies for Ricty font
        homebrew: name="{{ item }}" state=absent
        with_items:
          # dependencies for fontforge
          - ricty
          - fontforge
          - pango
          - harfbuzz
          - gobject-introspection
          - cairo
          - fontconfig
          - freetype
          - libpng
          - glib
          - gettext
          - libtool
          - libffi
          - pcre
          - pixman
          - icu4c
          - libtiff
          - jpeg
      when: "{{ is_ricty_installed.stat.md5 is not defined }}"
    # install consolas font
    - stat: path=~/Library/Fonts/CONSOLA.TTF
      register: is_consolas_installed
    - block:
      - name: install cabextract for Consolas font
        homebrew: name=cabextract state=latest
      - name: create working directory for Consolas font
        file: path=~/Download/consolas state=directory
      - name: download PowerPointViewer for Consolas font
        get_url: url="http://download.microsoft.com/download/f/5/a/f5a3df76-d856-4a61-a6bd-722f52a5be26/PowerPointViewer.exe" dest="~/Download/consolas"
                 sha256sum="c4e753548d3092ffd7dd3849105e0a26d9b5a1afe46e6e667fe7c6887893701f" force=yes
      - name: extract exe file
        shell: cabextract -d ~/Download/consolas ~/Download/consolas/PowerPointViewer.exe
        register: extract_result
      - name: extract cab file
        shell: cabextract -d ~/Download/consolas ~/Download/consolas/ppviewer.cab
        when: "{{ extract_result.rc == 0 }}"
      - name: copy the extracted font files
        shell: cp -f ~/Download/consolas/CONSOLA*.TTF ~/Library/Fonts/
        args:
          creates: ~/Library/Fonts/CONSOLA.TTF
      - name: remove working directory
        file: path=~/Download/consolas state=absent
      - name: uninstall cabextract
        homebrew: name=cabextract state=absent
      when: "{{ is_consolas_installed.stat.md5 is not defined }}"
    # system preference provisioning
    - name: Configure global domain defaults settings
      osx_defaults:
        domain: "{{ item.domain | default('NSGlobalDomain') }}"
        key: "{{ item.key }}"
        type: "{{ item.type }}"
        value: "{{ item.value }}"
        state: present
      with_items:
        - {
          key: InitialKeyRepeat,
          type: int,
          value: 15
          }
        - {
          key: KeyRepeat,
          type: int,
          value: 2
          }
        - {
          key: com.apple.trackpad.scaling,
          type: float,
          value: 1
          }
        - {
          key: com.apple.keyboard.fnState,
          type: bool,
          value: true
          }
        - {
          key: AppleShowAllExtensions,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.driver.AppleBluetoothMultitouch.trackpad,
          key: Clicking,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.driver.AppleBluetoothMultitouch.trackpad,
          key: TrackpadThreeFingerTapGesture,
          type: int,
          value: 2
          }
        - {
          domain: com.apple.finder,
          key: AppleShowAllFiles,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowExternalHardDrivesOnDesktop,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowRemovableMediaOnDesktop,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowPathbar,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowSidebar,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowStatusBar,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.finder,
          key: ShowTabView,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.dock,
          key: autohide,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.dock,
          key: magnification,
          type: bool,
          value: true
          }
        - {
          domain: com.apple.dock,
          key: orientation,
          type: string,
          value: "bottom"
          }
        - {
          domain: com.apple.dock,
          key: tilesize,
          type: float,
          value: 39
          }
